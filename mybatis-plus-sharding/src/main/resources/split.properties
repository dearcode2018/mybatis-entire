
# 配置参考: https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/usage/sharding/spring-boot-starter/
# 单库多表，多库多表
# 拆分依据: 某个字段 求余 | 截取首字符 | 哈希值 | 时间(时/日/周/月/季度/年代) |  
# 如下以 逻辑名称为 person 的表为例子
#############################################
# 答疑
# column-name 的确是列的名称，而不是实体的字段名

#############################################
# 场景1: 单库分表
spring.shardingsphere.datasource.names=ds0

spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.01:3306/db_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

# 数据节点
# 分表 {'0'..'z'} 表示从字符0  到字符z
spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds0.person_$->{'0'..'z'}
spring.shardingsphere.sharding.tables.person.table-strategy.inline.sharding-column=name
# $->{name[0..0]} 表示截取name列的第一个字符
spring.shardingsphere.sharding.tables.person.table-strategy.inline.algorithm-expression=person_$->{name[0..0]}

#############################################
# 场景2: 分库单表
spring.shardingsphere.datasource.names=ds0,ds1

spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.01:3306/db_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.01:3306/db_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 数据节点
spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds$->{0..1}.person
# 分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=name
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{name[0..0]}

#############################################
# 场景3: 分库分表
spring.shardingsphere.datasource.names=ds0,ds1
# 默认数据源
spring.shardingsphere.sharding.defaultDataSourceName=ds0
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.01:3306/db_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.01:3306/db_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 数据节点
spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds$->{0..1}.person_$->{'0'..'z'}
# 分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=name
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{name[0..0]}
# 分表 {'0'..'z'} 表示从字符0  到字符z
spring.shardingsphere.sharding.tables.person.table-strategy.inline.sharding-column=name
# $->{name[0..0]} 表示截取name列的第一个字符
spring.shardingsphere.sharding.tables.person.table-strategy.inline.algorithm-expression=person_$->{name[0..0]}

#############################################
# 场景5: 自定义拆分策略
spring.shardingsphere.datasource.names=ds0

spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.01:3306/db_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

# 数据节点
# 分表 {'0'..'z'} 表示从字符0  到字符z
spring.shardingsphere.sharding.tables.person.actual-data-nodes=ds0.person_$->{0..2}
spring.shardingsphere.sharding.tables.person.table-strategy.complex.algorithm-class-name=com.hua.algorithm.ShardTableAlgorithm
spring.shardingsphere.sharding.tables.person.table-strategy.complex.sharding-columns=name

#############################################
# 场景10: 主从库、读写分离
















